kind: pipeline
name: build

trigger:
  branch:
  - master
  - test3

steps:
- name: build-webapp
  commands:
   - ls -larth
  #- echo $DRONE_SA | base64 -d > gcp-key.json
  #- gcloud auth activate-service-account --key-file gcp-key.json
  #- gcloud config set core/project simplitaught
  #- cd web
  #- gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
#- name: build-sternguard
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#  depends_on: [ clone ]
#  commands:
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - cd backend/sternguard
#  - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
#
#- name: build-admin
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#  depends_on: [ clone ]
#  commands:
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - cd admin
#  - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7} --timeout=3600
#
#- name: build-profile
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#  depends_on: [ clone ]
#  commands:
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - cd backend/profile
#  - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
#
#- name: build-content
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#  depends_on: [ clone ]
#  commands:
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - cd backend/content
#  - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
#
#- name: build-social
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#  depends_on: [ clone ]
#  commands:
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - cd backend/social
#  - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
#
#- name: build-search
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#  depends_on: [ clone ]
#  commands:
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - cd backend/search
#  - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}

---
kind: pipeline
name: deploy

trigger:
  branch:
  - master
  - test3

depends_on:
- build

#steps:
#- name: deploy_staging
#  image: google/cloud-sdk:latest
#  environment:
#    DRONE_SA:
#      from_secret: drone-sa
#    JWT_KEY:
#      from_secret: staging-jwt-key
#    POSTGRES_PASSWORD:
#      from_secret: staging-postgresql-password
#    MG_API_KEY:
#      from_secret: mg-apikey
#    GOOGLE_APP_SA:
#      from_secret: app-sa
#    ES_URL:
#      from_secret: staging-es-server-url
#    ES_API_KEY:
#      from_secret: staging-es-api-key
#    ES_API_KEY_ID:
#      from_secret: staging-es-api-key-id
#    ES_INDEX_NAME:
#      from_secret: staging-es-index-name
#    MONGO_HOST:
#      from_secret: staging-mongo-host
#    MONGO_USERNAME:
#      from_secret: staging-mongo-username
#    MONGO_PASSWORD:
#      from_secret: staging-mongo-password
#    MONGO_DBNAME:
#      from_secret: staging-mongo-dbname
#  depends_on: [ clone ]
  commands:
   - cat /etc/passwd
#  - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
#  - echo $DRONE_SA | base64 -d > gcp-key.json
#  - gcloud auth activate-service-account --key-file gcp-key.json
#  - gcloud config set core/project simplitaught
#  - gcloud container clusters get-credentials simplitaught --zone us-central1-a --project simplitaught
#  - kubectl config use-context gke_simplitaught_us-central1-a_simplitaught
#  - cd infra/main-chart
#  - helm repo add stable https://kubernetes-charts.storage.googleapis.com/
#  - helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/
#  - helm dependency update
#  - helm upgrade --install staging . --namespace staging --set namespace="staging" --set tag="${DRONE_COMMIT:0:7}" --set secrets.sternguardJwtKey="$JWT_KEY" --set postgresql.postgresqlPassword="$POSTGRES_PASSWORD" --set mailgun.apiKey="$MG_API_KEY" --set google.sa_key="$GOOGLE_APP_SA" --set elastic.url="$ES_URL" --set elastic.api_key="$ES_API_KEY" --set elastic.api_key_id="$ES_API_KEY_ID" --set elastic.index_name="$ES_INDEX_NAME" --set mongo.host="$MONGO_HOST" --set mongo.username="$MONGO_USERNAME" --set mongo.password="$MONGO_PASSWORD" --set mongo.dbname="$MONGO_DBNAME"